{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge, genericProps } from '../../utils';\nexport var doc = function doc(Paragraph) {\n  var DocumentedParagraph = describe(Paragraph).availableAt(getAvailableAtBadge('Paragraph')).description('A paragraph of text.').usage(\"import { Paragraph } from 'grommet';\\n<Paragraph />\");\n  DocumentedParagraph.propTypes = _extends({}, genericProps, {\n    color: PropTypes.string.description('A color identifier to use for the text color.'),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large', 'xlarge', 'xxlarge']), PropTypes.string]).description('The size of the Paragraph text.').defaultValue('medium'),\n    textAlign: PropTypes.oneOf(['start', 'center', 'end']).description('How to align the text inside the paragraph.').defaultValue('start')\n  });\n  return DocumentedParagraph;\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Waypoint from 'react-waypoint';\n\nvar InfiniteScroll =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inheritsLoose(InfiniteScroll, _PureComponent);\n\n  function InfiniteScroll() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"showRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"initialScroll\", false);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scrollShow\", function () {\n      /* eslint-disable-next-line react/prop-types */\n      var show = _this.props.show;\n\n      if (show && !_this.initialScroll && _this.showRef.current) {\n        _this.initialScroll = true; // on initial render, scroll to any 'show'\n\n        /* eslint-disable react/no-find-dom-node */\n\n        var element = findDOMNode(_this.showRef.current);\n        element.scrollIntoView();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"increaseOffset\", function () {\n      /* eslint-disable-next-line react/prop-types */\n      var _this$props = _this.props,\n          items = _this$props.items,\n          onMore = _this$props.onMore,\n          step = _this$props.step;\n      var count = _this.state.count;\n\n      _this.setState({\n        count: count + 1\n      }, // call onMore if we've reached the end of the items\n      function () {\n        return onMore && (count + 1) * step >= items.length && onMore();\n      });\n    });\n\n    return _this;\n  }\n\n  InfiniteScroll.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var show = nextProps.show,\n        step = nextProps.step;\n\n    if (!prevState.count || show && show < step * prevState.count) {\n      var count = prevState.count || 1;\n\n      if (show && show > step * count) {\n        count = (show + step) / step;\n      }\n\n      return {\n        count: count\n      };\n    }\n\n    return null;\n  };\n\n  var _proto = InfiniteScroll.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.scrollShow();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.scrollShow();\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        items = _this$props2.items,\n        renderMarker = _this$props2.renderMarker,\n        scrollableAncestor = _this$props2.scrollableAncestor,\n        show = _this$props2.show,\n        step = _this$props2.step;\n    var count = this.state.count;\n    var displayCount = step * count;\n    var waypointAt = displayCount - step / 2;\n    var marker = React.createElement(Waypoint, {\n      key: \"marker\",\n      onEnter: this.increaseOffset,\n      bottomOffsetX: \"-96px\",\n      scrollableAncestor: scrollableAncestor\n    });\n\n    if (renderMarker) {\n      // need to give it a key\n      marker = React.cloneElement(renderMarker(marker), {\n        key: 'marker'\n      });\n    }\n\n    return items.slice(0, displayCount).map(function (item, index) {\n      var child = children(item, index);\n\n      if (show && show === index) {\n        child = React.cloneElement(child, {\n          key: 'show',\n          ref: _this2.showRef\n        });\n      }\n\n      if (index === waypointAt) {\n        return [child, marker];\n      }\n\n      return child;\n    });\n  };\n\n  return InfiniteScroll;\n}(PureComponent);\n\n_defineProperty(InfiniteScroll, \"defaultProps\", {\n  items: [],\n  step: 50\n});\n\nvar InfiniteScrollDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  InfiniteScrollDoc = require('./doc').doc(InfiniteScroll); // eslint-disable-line global-require\n}\n\nvar InfiniteScrollWrapper = InfiniteScrollDoc || InfiniteScroll;\nexport { InfiniteScrollWrapper as InfiniteScroll };","map":null,"metadata":{},"sourceType":"module"}
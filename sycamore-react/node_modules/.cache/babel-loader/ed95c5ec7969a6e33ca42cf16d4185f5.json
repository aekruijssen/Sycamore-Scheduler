{"ast":null,"code":"import { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils';\nvar PAD_SIZES = ['xxsmall', 'xsmall', 'small', 'medium', 'large'];\nexport var doc = function doc(Layer) {\n  var DocumentedLayer = describe(Layer).availableAt(getAvailableAtBadge('Layer')).description(\"A modal overlay. It is the caller's responsibility to provide a control for\\n      the user to close the layer.\").usage(\"import { Layer } from 'grommet';\\n<Layer />\");\n  DocumentedLayer.propTypes = {\n    full: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertical', 'horizontal'])]).description('Whether the width and/or height should fill the current viewport size.').defaultValue(false),\n    margin: PropTypes.oneOfType([PropTypes.oneOf(['none'].concat(PAD_SIZES)), PropTypes.shape({\n      bottom: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n      horizontal: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n      left: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n      right: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n      top: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string]),\n      vertical: PropTypes.oneOfType([PropTypes.oneOf(PAD_SIZES), PropTypes.string])\n    }), PropTypes.string]).description(\"The amount of margin around the Layer. An object can be specified to\\ndistinguish horizontal margin, vertical margin, and margin on a\\nparticular side of the layer\"),\n    modal: PropTypes.bool.description('Whether there should be an overlay preventing interaction underneath the layer.').defaultValue(true),\n    onClickOutside: PropTypes.func.description('Function that will be invoked when the user clicks outside the layer.'),\n    onEsc: PropTypes.func.description('Function that will be called when the user presses the escape key inside the layer.'),\n    plain: PropTypes.bool.description('Whether this is a plain Layer with no background color or border.').defaultValue(false),\n    position: PropTypes.oneOf(['bottom', 'center', 'hidden', 'left', 'right', 'top']).description('Position of the layer content.').defaultValue('center'),\n    responsive: PropTypes.bool.description('Whether the layer should take full width and height on mobile').defaultValue(true)\n  };\n  return DocumentedLayer;\n};","map":null,"metadata":{},"sourceType":"module"}
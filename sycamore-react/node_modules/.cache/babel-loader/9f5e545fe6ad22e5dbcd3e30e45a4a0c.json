{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Children, Component } from 'react';\nimport { compose } from 'recompose';\nimport { ThemeContext as IconThemeContext } from \"grommet-icons/es6/contexts/ThemeContext\";\nimport { ThemeContext } from '../../contexts';\nimport { backgroundIsDark } from '../../utils';\nimport { withForwardRef, withTheme } from '../hocs';\nimport { StyledBox, StyledBoxGap } from './StyledBox';\n\nvar Box =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Box, _Component);\n\n  function Box() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    return _this;\n  }\n\n  Box.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    // Since Box can change the background color for its contents,\n    // we update the theme to indicate whether the current context is `dark`\n    // and what icon theme to use.\n    var background = nextProps.background,\n        propsTheme = nextProps.theme;\n    var stateTheme = prevState.theme,\n        priorTheme = prevState.priorTheme;\n    var dark = propsTheme.dark;\n\n    if (background) {\n      dark = backgroundIsDark(background, propsTheme);\n    }\n\n    if (dark === propsTheme.dark && stateTheme) {\n      return {\n        theme: undefined,\n        priorTheme: undefined\n      };\n    }\n\n    if (dark !== propsTheme.dark && (!stateTheme || dark !== stateTheme.dark || propsTheme !== priorTheme)) {\n      return {\n        theme: _extends({}, propsTheme, {\n          dark: dark,\n          icon: dark ? propsTheme.iconThemes.dark : propsTheme.iconThemes.light\n        }),\n        priorTheme: propsTheme\n      };\n    }\n\n    return null;\n  };\n\n  var _proto = Box.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        a11yTitle = _this$props.a11yTitle,\n        children = _this$props.children,\n        direction = _this$props.direction,\n        elevation = _this$props.elevation,\n        fill = _this$props.fill,\n        forwardRef = _this$props.forwardRef,\n        gap = _this$props.gap,\n        overflow = _this$props.overflow,\n        responsive = _this$props.responsive,\n        tag = _this$props.tag,\n        propsTheme = _this$props.theme,\n        wrap = _this$props.wrap,\n        width = _this$props.width,\n        height = _this$props.height,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"a11yTitle\", \"children\", \"direction\", \"elevation\", \"fill\", \"forwardRef\", \"gap\", \"overflow\", \"responsive\", \"tag\", \"theme\", \"wrap\", \"width\", \"height\"]);\n\n    var _this$state = this.state,\n        stateTheme = _this$state.theme,\n        priorTheme = _this$state.priorTheme;\n    var theme = stateTheme || propsTheme;\n    var contents = children;\n\n    if (gap) {\n      contents = [];\n      var firstIndex;\n      Children.forEach(children, function (child, index) {\n        if (child) {\n          if (firstIndex === undefined) {\n            firstIndex = index;\n          } else {\n            contents.push(React.createElement(StyledBoxGap, {\n              key: index,\n              gap: gap,\n              directionProp: direction,\n              responsive: responsive,\n              theme: theme\n            }));\n          }\n        }\n\n        contents.push(child);\n      });\n    }\n\n    var content = React.createElement(StyledBox, _extends({\n      as: tag,\n      \"aria-label\": a11yTitle,\n      ref: forwardRef,\n      directionProp: direction,\n      elevationProp: elevation,\n      fillProp: fill,\n      overflowProp: overflow,\n      wrapProp: wrap,\n      widthProp: width,\n      heightProp: height,\n      responsive: responsive,\n      theme: theme,\n      priorTheme: priorTheme\n    }, rest), contents);\n\n    if (stateTheme) {\n      if (stateTheme.dark !== propsTheme.dark && stateTheme.icon) {\n        content = React.createElement(IconThemeContext.Provider, {\n          value: stateTheme.icon\n        }, content);\n      }\n\n      content = React.createElement(ThemeContext.Provider, {\n        value: stateTheme\n      }, content);\n    }\n\n    return content;\n  };\n\n  return Box;\n}(Component);\n\n_defineProperty(Box, \"defaultProps\", {\n  direction: 'column',\n  margin: 'none',\n  pad: 'none',\n  responsive: true,\n  tag: 'div'\n});\n\nvar BoxDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  BoxDoc = require('./doc').doc(Box); // eslint-disable-line global-require\n}\n\nvar BoxWrapper = compose(withTheme, withForwardRef)(BoxDoc || Box);\nexport { BoxWrapper as Box };","map":null,"metadata":{},"sourceType":"module"}
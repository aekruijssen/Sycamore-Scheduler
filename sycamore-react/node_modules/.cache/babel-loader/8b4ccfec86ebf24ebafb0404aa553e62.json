{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { TableCell } from '../TableCell';\nimport { Text } from '../Text';\nexport var Cell = function Cell(_ref) {\n  var _ref$column = _ref.column,\n      align = _ref$column.align,\n      property = _ref$column.property,\n      primary = _ref$column.primary,\n      render = _ref$column.render,\n      context = _ref.context,\n      datum = _ref.datum,\n      scope = _ref.scope,\n      theme = _ref.theme;\n  var content;\n\n  if (render) {\n    if (datum[property]) {\n      content = render(datum);\n    }\n  } else if (datum[property]) {\n    content = datum[property];\n  }\n\n  if (typeof content === 'string' || typeof content === 'number') {\n    var textProps = primary ? theme.dataTable.primary : {};\n    content = React.createElement(Text, textProps, content);\n  }\n\n  return React.createElement(TableCell, _extends({\n    scope: scope\n  }, theme.dataTable[context], {\n    align: align\n  }), content);\n};","map":null,"metadata":{},"sourceType":"module"}